pragma solidity >=0.4.22 <0.7.0;

contract {{name}} {

    struct {{inputStreamName}}Event {
        {{#attributes}}
        {{type}} {{name}}
        {{/attributes}}
}

struct {{outputStreamName}}Event {
{{#outAttributes}}
    {{type}} {{rename}}
{{/outAttributes}}
}


{{outputStreamName}}Event[] public {{outputStreamName}}Events;

function process({{inputStreamName}}Event incoming{{inputStreamName}}Event){
{{#isHasFilter}}
    if {{{expression}}}{
    {{outputStreamName}}Events.push({{outputStreamName}}Event({
    {{#outAttributes}}
        {{rename}}: incoming{{inputStreamName}}Event.{{name}}
    {{/outAttributes}}
    }));
    }
{{/isHasFilter}}
    {{#isHasNoFilter}}
        {{outputStreamName}}Events.push({{outputStreamName}}Event({
        {{#outAttributes}}
            {{rename}}: incoming{{inputStreamName}}Event.{{name}}
        {{/outAttributes}}
        }));
    {{/isHasNoFilter}}
    }
}