pragma solidity >=0.4.22 <0.7.0;

contract {{name}} {

{{inputStreamName}}Event[{{windowLength}}] window;
unit8 index;

struct {{inputStreamName}}Event {
{{#attributes}}
    {{type}} {{name}}
{{/attributes}}
}


struct {{outputStreamName}}Event {
{{#outAttributes}}
    {{type}} {{rename}}
{{/outAttributes}}
}

{{outputStreamName}}Event[] public processed{{outputStreamName}}Events;

function get() public return (unit16){
return window[index];
}

function set({{inputStreamName}}Event incoming{{inputStreamName}}Event){
if(index == window.size) {
index == 0;
}
else {
index++;
}
window[index] ==
}

function getHistory() public return(unit16[]){
unit16[{{windowLength}}] result;

for(int8 i=index; i>0; i--) {
result[index -1] = vars[i];
for(int8 i=vars.size-1; i>index; i--)
result[index + vars.size -1] = vars[i];
return result;
}

function process({{inputStreamName}}Event incoming{{inputStreamName}}Event){

}
}
